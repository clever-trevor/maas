#!/usr/bin/python3

# This routing controls viewing and setting of alerting
import cgi
import glob
import subprocess
import os
import elasticsearch
import datetime
import configparser

maas = configparser.RawConfigParser()
maas.read('/app/maas/conf/env')


print("Content-Type:text/html;\n")
print("<html><head><link rel='stylesheet' type='text/css' href='/responstable.css'></head>")
print("<h1><A style='text-decoration:none' HREF='/index.html'>Monitoring Alert Management</a></h1>")
print("<hr>")

es = { "url": maas['elastic']['url'] ,"user": maas['elastic']['user'],"pass": maas['elastic']['pass'] }
host_config_index = "maas_config_hosts_publish"
alert_config_index = "maas_config_alert"

# Pull in URL parameters
fs = cgi.FieldStorage()
try:
  mode = fs['mode'].value
except:
  mode = "view"

# Routine to print a Select block with a preselected option if a match found
def print_select(id,name,options,match) :
  print("<select id='%s' name='%s'>" % (id,name))
  for option in options.split(",") :
    print("<option value='%s'" % ( option ))
    if option == match :
      print(" selected ")
    print(">%s</option>" % (option))

########### EDIT
if mode == "edit":
  # We have passed in the contents and host so we will just set them 
  # Note : "edit=true" means don't write the detail but pre-populate form (next section)
  if 'host' in fs and not 'edit' in fs :
    host = fs['host'].value
    mon_type = fs['type'].value
    instance_name = fs['instance_name'].value
    instance_value = fs['instance_value'].value
    metric = fs['metric'].value
    operator = fs['operator'].value
    threshold = fs['threshold'].value
    queue = fs['queue'].value

    key = "%s:%s:%s:%s:%s" % ( host,mon_type,instance_name,instance_value,metric )
    now = datetime.datetime.now().strftime("%d/%m/%Y %H:%M:%S")

    doc = { "host":host, "type":mon_type, "instance_name":instance_name,"instance_value":instance_value,"metric":metric,"operator":operator,"threshold":threshold,"queue":queue,"last_updated":now }
    # Open alert config
    print("<h4><font color='Red'>** Alert Written to Database **</font></h4>")
    x = elasticsearch.post_document(es,alert_config_index,"_doc",key,doc)

    # print link to config
    print("<h2><A HREF='/cgi-bin/alert?mode=view'>View all Alert Configuration</A></h2>")
     
  # Either some detail was missing, or we want to go into form "edit" mode
  else :
    # See if we can get some details from the URL params
    if 'host' in fs : 
      host = fs['host'].value
    else :
      host = ""
    if 'type' in fs : 
      type = fs['type'].value
    else :
      type = ""
    if 'instance_name' in fs : 
      instance_name = fs['instance_name'].value
    else :
      instance_name = ""
    if 'instance_value' in fs : 
      instance_value = fs['instance_value'].value
    else :
      instance_value = ""
    if 'metric' in fs : 
      metric = fs['metric'].value
    else :
      metric  = ""
    if 'operator' in fs : 
      operator = fs['operator'].value
    else :
      operator = ""
    if 'threshold' in fs : 
      threshold = fs['threshold'].value
    else :
      threshold = ""
    if 'queue' in fs : 
      queue = fs['queue'].value
    else :
      queue = ""

    # Now lets build the form, populating values if we have them
    print("""
<html>
<h2>Configure metric collection for a host</h2>
<FORM ACTION="/cgi-bin/alert?mode=edit" METHOD="POST">
<TABLE>
 <TR>
  <TD>Hostname</TD>
  <TD>
    """)
    # Build list of hosts based on hosts that are currently configured
    x = elasticsearch.run_search_uri(es,host_config_index,"q=*&size=10000")['hits']
    records = x['hits']
    hosts = ""
    for record in records:
      hosts += record['_source']['host'] + ","
    hosts = hosts[:-1]
    print_select("host","host",hosts,host)
       
    print("""

  </TD>
 </TR>
 <TR>
  <TD>Type</TD>
  <TD>
  """)
    print_select("type","type","cpu,disk,procstat,procstat_lookup,http",type)
    print("""
  </TD>
 </TR>
 <TR>
  <TD>Instance Name</TD>
  <TD>
  """)
    print("<input name='instance_name' id='instance_name' value='" + instance_name + "'>")
    print("""
    </input>
  </TD>
 </TR>
 <TR>
  <TD>Instance Value</TD>
  <TD>
  """)
    print("<input name='instance_value' id='instance_value' value='" + instance_value + "'>")
    print("""
    </input>
  </TD>
 </TR>
 <TR>
  <TD>Metric</TD>
  <TD>
  """)
    print("<input name='metric' id='metric' value='" + metric + "'>")
    print("""
    </input>
  </TD>
 </TR>
 <TR>
  <TD>Operator</TD>
  <TD>
  """)
    print_select("operator","operator","<,<=,>,<=,=",operator)
    print("""
  </TD>
 </TR>
 <TR>
  <TD>Threshold</TD>
  <TD>
  """)
    print("<input name='threshold' id='threshold' value='" + threshold+ "'>")
    print("""
    </input>
  </TD>
 </TR>
 <TR>
  <TD>Support Queue</TD>
  <TD>
  """)
    print("<input name='queue' id='queue' value='" + queue + "'>")
    print("""
    </input>
  </TD>
 </TR>
 <TR>
  <TD COLSPAN=2 ALIGN=CENTER>
   <input class="form-submit-button" type="submit"></input>
  </TD>
 </TR>
  
</TABLE>
</FORM>

<B>Example Metric</B><BR>
<TABLE border=1><TR><TH>Monitor Type<TH>Instance Name<TH>Instance Value<TH>Metrics</TR>
<TR><TD>cpu<TD>cpu<TD>cpu-total<TD>usage_idle<BR>usage_system<BR>usage_user</TR>
<TR><TD>disk<TD>path<TD>/opt<BR>C:<TD>free<BR>inodes_free<BR>used<BR>used_percent</TR>
<TR><TD>procstat<TD>exe<TD>sshd<BR>syslogd<TD>cpu_time_idle<BR>cpu_time_user<BR>cpu_time_system<BR>memory_usage<BR>num_threads</TR>
<TR><TD>procstat_lookup<TD>exe<TD>sshd<BR>syslogd<TD>pid_count<BR>runnning</TR>
<TR><TD>http<TD>server<TD>http://1.2.3.4/index.html<TD>response_time<BR>result_code</TR>
</TABLE>
""")

################### VIEW Alert config
elif mode == "view":
  print("<h2>Alert Config View</h2>")
  # Alert configuration
  x = elasticsearch.run_search_uri(es,alert_config_index,"q=*&size=10000")['hits']
  alerts = x['hits']

  print("<TABLE class='container'><TR><TH>Host<TH>Type<TH>Instance Name<TH>Instance Value<TH>Metric<TH>Operator<TH>Threshold<TH>Support Queue<TH>Edit</TR>")

  for r in alerts:
    r = r['_source']
    host = r['host']
    mon_type = r['type']
    instance_name = r['instance_name']
    instance_value = r['instance_value']
    metric = r['metric']
    operator = r['operator']
    threshold = r['threshold']
    queue = r['queue']

    params = "mode=edit&host=%s&type=%s&instance_name=%s&instance_value=%s&metric=%s&operator=%s&threshold=%s&queue=%s&edit=true" % ( host,mon_type,instance_name,instance_value,metric,operator,threshold,queue)
    url = "/cgi-bin/alert?" + params
    print("<TR><TD>%s<TD>%s<TD>%s<TD>%s<TD>%s<TD>%s<TD>%s<TD>%s<TD><A HREF='%s'>Edit</A></TR>" % ( host,mon_type,instance_name,instance_value,metric,operator,threshold,queue,url))
  print("</TABLE>")
  print("<h3><A HREF='/cgi-bin/alert?mode=edit'>Edit Mode</A></h3>")

elif mode == "test":
  print("<h2>Running Alert Checks</h2>")
  test = subprocess.run(["/app/maas/scripts/alert.py"])
  print("<h4>Test run completed</h4>")
  print("<h3><A HREF='" + maas['views']['alert_history'] + "'>View History</A></h3>")

print("</html>")

